name: Check

on:
  - push
  - pull_request

env:
  CARGO_NET_RETRY: 10
  CI: 1
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    name: CI (Windows)
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - wasm32-unknown-unknown
    env:
      CARGO_BUILD_TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          vsversion: 2022
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          profile: minimal
          override: true
          components: clippy
      - name: Install node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21
      - name: Install System packages
        run: |
          python -m pip install pefile
      - name: Clippy
        run: cargo clippy
        env:
          RUSTFLAGS: "-D warnings -A clippy::missing_safety_doc"
      - name: Test
        if: ${{ matrix.target != 'wasm32-unknown-unknown' }}
        run: cargo test --lib -- --test-threads 1
      - name: Check cargo build --release
        if: ${{ matrix.target != 'wasm32-unknown-unknown' }}
        run: |
          python .\scripts\ci.py ${{ runner.temp }} _ Cargo 0 .\tests\ci.json
      - name: Check C (x86_64)
        if: ${{ matrix.target == 'x86_64-pc-windows-msvc' }}
        run: |
          python .\scripts\ci.py ${{ runner.temp }} .\release-64bit-windows.cmd C 64 .\tests\ci.json
      - name: Check Rust (x86_64)
        if: ${{ matrix.target == 'x86_64-pc-windows-msvc' }}
        run: |
          python .\scripts\ci.py ${{ runner.temp }} .\release-64bit-windows-rs.cmd Rust 64 .\tests\ci.json
      - name: Check wasm32
        if: ${{ matrix.target == 'wasm32-unknown-unknown' }}
        run: |
          python .\scripts\ci.py ${{ runner.temp }} .\release-wasm32.cmd JavaScript 32 .\tests\ci.json